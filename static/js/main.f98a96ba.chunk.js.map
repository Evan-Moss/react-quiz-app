{"version":3,"sources":["questions.js","theme.js","index.js"],"names":["QUESTIONS","question","options","correct","shuffledQuestions","numQuestions","length","questionKeys","Array","keys","returnQuestions","i","randomIndex","Math","floor","random","push","splice","greenTheme","createTheme","palette","primary","background","default","purpleTheme","pinkTheme","Answer","props","className","quizEnded","ListItem","button","divider","variant","onClick","style","disabled","clicked","ListItemText","sx","textAlign","value","Question","console","log","this","score","percentage","maxScore","message","Typography","align","q","React","Component","Answers","numAnswers","answers","renderAnswer","List","renderAnswers","Settings","themeOptions","title","theme","color","SpeedDial","ariaLabel","position","bottom","right","icon","SpeedDialIcon","map","SpeedDialAction","tooltipTitle","Game","QS","state","currQuestion","questions","currScore","chosenTheme","setState","ThemeProvider","CssBaseline","changeTheme","Box","display","justifyContent","alignItems","minHeight","Card","elevation","minWidth","maxWidth","CardContent","num","chosenAnswer","correctAnswer","handleClick","Stack","direction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f98a96ba.chunk.js","sourcesContent":["const QUESTIONS = [{\n    question: 'What is the Capital of 🏴󠁧󠁢󠁷󠁬󠁳󠁿?',\n    options: ['Cardiff', 'London', 'Edinburgh'],\n    correct: 'Cardiff'\n},\n{\n    question: 'What is the Capital of 🏴󠁧󠁢󠁥󠁮󠁧󠁿?',\n    options: ['Cardiff', 'London', 'Edinburgh', 'Belfast'],\n    correct: 'London'\n},\n{\n    question: 'What country is 🇹🇷?',\n    options: ['Turkey', 'Lebanon', 'Egypt', 'Germany'],\n    correct: 'Turkey'\n},\n{\n    question: 'Which Flag is Belarus?',\n    options: ['🇨🇿', '🇧🇾', '🇮🇱', '🇹🇲'],\n    correct: '🇧🇾'\n}\n];\n\nconst shuffledQuestions = (numQuestions=QUESTIONS.length) => {\n\n    if (numQuestions > QUESTIONS.length) { numQuestions=QUESTIONS.length}\n\n    let questionKeys = [...Array(QUESTIONS.length).keys()];    \n    let returnQuestions = []\n\n    for (let i = 0; i<numQuestions; i++) {\n        let randomIndex = Math.floor(Math.random()*questionKeys.length);\n        returnQuestions.push(QUESTIONS[questionKeys[randomIndex]]);\n        questionKeys.splice(randomIndex,1);\n    }\n\n    return returnQuestions\n}\n\n//console.log(shuffleQuestions());\n\nexport default shuffledQuestions;","import { createTheme }  from '@mui/material/styles'\n\nconst greenTheme = createTheme({\n  palette: {\n    primary: { 500: '#39A9DB' },\n    background: {\n        default: \"#e4f0e2\"\n    },\n  },\n})\n\nconst purpleTheme = createTheme({\n  palette: {\n    primary: { 500: '#39A9DB' },\n    background: {\n        default: \"#eee2f0\"\n    },\n  },\n})\n\nconst pinkTheme = createTheme({\n  palette: {\n    primary: { 500: '#39A9DB' },\n    background: {\n        default: \"#ffabc7\"\n    },\n  },\n})\n\nexport { greenTheme, purpleTheme, pinkTheme }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport shuffledQuestions from './questions'; \nimport { SpeedDial, SpeedDialIcon, SpeedDialAction, Card, CardContent, Box, \n    Stack, ListItemText, List, ListItem, Typography} from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { greenTheme, purpleTheme, pinkTheme } from './theme'\n\n\nfunction Answer(props) {\n    return (\n        <div className = {props.quizEnded? 'hidden' : 'undefined'}>\n            <ListItem button divider\n                variant='outlined' \n                className='Answer' \n                onClick= {props.onClick}\n                style = {props.style}\n                disabled={props.clicked}\n            >\n            <ListItemText sx={{ textAlign: 'center' }}>{props.value}</ListItemText>\n            </ListItem>\n        </div>\n    )\n}\n\nclass Question extends React.Component {\n    render() {\n        console.log(this.props.score)\n        let percentage = Math.floor((this.props.score / this.props.maxScore)*100);\n        let message = ''\n        if (this.props.score === this.props.maxScore){\n            message = 'Perfect Score!';\n        } else if (this.props.score > (this.props.maxScore/2)){\n            message = 'Well Done!';\n        } else {\n            message = 'End of quiz.';\n        }\n        message += ` ${percentage}%`;\n\n        return (\n            <Typography variant='h5' align='center'>{this.props.quizEnded ? message : `${this.props.q}`}</Typography>\n        );\n    }\n}\n\nclass Answers extends React.Component {\n\n    renderAnswer(i) {\n        //const style = (this.props.options[i] === this.props.correct) ? {backgroundColor: 'green'}: {} ;\n        return (\n            <Answer\n                value = {this.props.options[i]}\n                onClick = {() => this.props.onClick(this.props.options[i], this.props.correct)}\n                quizEnded = {this.props.quizEnded}\n                //clicked = {this.props.clicked} \n            />\n            \n        )\n    }\n\n    renderAnswers(numAnswers) {\n        console.log(`aaa ${this.props.quizEnded}`);\n        let answers = [];\n        for (let i = 0; i< numAnswers; i++){\n            answers.push(this.renderAnswer(i));\n        }\n        return answers;\n    }\n\n    render() {\n        return (\n            <List>\n                {this.renderAnswers(this.props.options.length)}\n            </List>\n        );\n    }\n}\n\nclass Settings extends React.Component {\n    render() {\n\n        const themeOptions = [{\n            title: 'Green',\n            theme: greenTheme,\n            color: '#e4f0e2'\n        },\n        {\n            title: 'Purple',\n            theme: purpleTheme,\n            color: '#eee2f0'\n        },\n        {\n            title: 'Pink',\n            theme: pinkTheme,\n            color: '#ffabc7'\n        },\n        ]   \n\n        return (\n            <div>\n            <SpeedDial\n                ariaLabel=\"SpeedDial basic example\"\n                sx={{ position: 'absolute', bottom: 16, right: 16 }}\n                icon={<SpeedDialIcon />}\n            >\n            {themeOptions.map((theme) => (\n                <SpeedDialAction\n                sx = {'background-color: ' + theme.color}\n                onClick= {() => {this.props.onClick(theme.theme)}}\n                tooltipTitle={theme.title}\n                />\n            ))}\n            </SpeedDial>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    // If you add a history state, then you can pass color to render\n\n    changeTheme(chosenTheme) {\n        this.setState({theme: chosenTheme})\n    }\n\n    constructor(props){\n        super(props);\n        const QS = shuffledQuestions();\n        this.state={\n            currQuestion: 0,\n            questions: QS,\n            quizEnded: false,\n            currScore: 0,\n            theme: greenTheme\n        }\n        this.state.numQuestions =  this.state.questions.length;\n    }\n\n    handleClick(value, correct) {\n        \n        let score = 0;\n\n        if (value === correct){\n            console.log('Correct!!');\n            score++;\n            this.setState({currScore: this.state.currScore + score});\n        }\n\n        if (this.state.currQuestion + 1 >= this.state.numQuestions){\n            this.setState({quizEnded:true});\n            return\n        }\n        //setTimeout(() => {this.setState({currQuestion: this.state.currQuestion + 1})}, 500);\n        this.setState({currQuestion: this.state.currQuestion + 1})\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme = {this.state.theme}>\n            <CssBaseline/>\n                <div className='game'>\n                    <Settings \n                        onClick={(chosenTheme) => {this.changeTheme(chosenTheme)}}\n                    />\n                    <Box \n                        display=\"flex\" \n                        justifyContent=\"center\" \n                        alignItems=\"center\"\n                        minHeight=\"100vh\"\n                    >\n                        <Card elevation='4' sx={{ minWidth: 350, maxWidth:350}} >\n                            <CardContent>\n                                <Question \n                                    q = {this.state.questions[this.state.currQuestion].question}\n                                    num = {this.state.currQuestion}   \n                                    quizEnded = {this.state.quizEnded}\n                                    score = {this.state.currScore}\n                                    maxScore = {this.state.numQuestions}\n                                />\n                                <Answers \n                                    options = {this.state.questions[this.state.currQuestion].options}\n                                    correct = {this.state.questions[this.state.currQuestion].correct}\n                                    onClick = {(chosenAnswer, correctAnswer) => this.handleClick(chosenAnswer, correctAnswer)}\n                                    quizEnded = {this.state.quizEnded}\n                                />\n                                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                                    <Typography>\n                                        {`Score: ${this.state.currScore}`}\n                                    </Typography>\n                                    <Typography>\n                                        {`Question: ${this.state.currScore}/${this.state.numQuestions}`}\n                                    </Typography>\n                                </Stack>\n                            </CardContent>\n                        </Card>\n                    </Box>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);"],"sourceRoot":""}